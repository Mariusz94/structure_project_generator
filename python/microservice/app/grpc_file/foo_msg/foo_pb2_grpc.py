# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from default_msg import default_pb2 as default__msg_dot_default__pb2
from foo_msg import foo_pb2 as foo__msg_dot_foo__pb2


class FooServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FooMethod1 = channel.unary_unary(
                '/FooService/FooMethod1',
                request_serializer=foo__msg_dot_foo__pb2.FooRequest.SerializeToString,
                response_deserializer=foo__msg_dot_foo__pb2.FooResponse.FromString,
                )
        self.FooMethod2 = channel.unary_unary(
                '/FooService/FooMethod2',
                request_serializer=foo__msg_dot_foo__pb2.FooRequest.SerializeToString,
                response_deserializer=default__msg_dot_default__pb2.Empty.FromString,
                )
        self.FooMethodSendFile = channel.unary_stream(
                '/FooService/FooMethodSendFile',
                request_serializer=foo__msg_dot_foo__pb2.FooFileInfo.SerializeToString,
                response_deserializer=foo__msg_dot_foo__pb2.FooFile.FromString,
                )
        self.FooMethodReceiveFile = channel.stream_unary(
                '/FooService/FooMethodReceiveFile',
                request_serializer=foo__msg_dot_foo__pb2.FooFile.SerializeToString,
                response_deserializer=foo__msg_dot_foo__pb2.FooStatus.FromString,
                )


class FooServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def FooMethod1(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FooMethod2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FooMethodSendFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FooMethodReceiveFile(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FooServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FooMethod1': grpc.unary_unary_rpc_method_handler(
                    servicer.FooMethod1,
                    request_deserializer=foo__msg_dot_foo__pb2.FooRequest.FromString,
                    response_serializer=foo__msg_dot_foo__pb2.FooResponse.SerializeToString,
            ),
            'FooMethod2': grpc.unary_unary_rpc_method_handler(
                    servicer.FooMethod2,
                    request_deserializer=foo__msg_dot_foo__pb2.FooRequest.FromString,
                    response_serializer=default__msg_dot_default__pb2.Empty.SerializeToString,
            ),
            'FooMethodSendFile': grpc.unary_stream_rpc_method_handler(
                    servicer.FooMethodSendFile,
                    request_deserializer=foo__msg_dot_foo__pb2.FooFileInfo.FromString,
                    response_serializer=foo__msg_dot_foo__pb2.FooFile.SerializeToString,
            ),
            'FooMethodReceiveFile': grpc.stream_unary_rpc_method_handler(
                    servicer.FooMethodReceiveFile,
                    request_deserializer=foo__msg_dot_foo__pb2.FooFile.FromString,
                    response_serializer=foo__msg_dot_foo__pb2.FooStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'FooService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FooService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def FooMethod1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FooService/FooMethod1',
            foo__msg_dot_foo__pb2.FooRequest.SerializeToString,
            foo__msg_dot_foo__pb2.FooResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FooMethod2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FooService/FooMethod2',
            foo__msg_dot_foo__pb2.FooRequest.SerializeToString,
            default__msg_dot_default__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FooMethodSendFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/FooService/FooMethodSendFile',
            foo__msg_dot_foo__pb2.FooFileInfo.SerializeToString,
            foo__msg_dot_foo__pb2.FooFile.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FooMethodReceiveFile(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/FooService/FooMethodReceiveFile',
            foo__msg_dot_foo__pb2.FooFile.SerializeToString,
            foo__msg_dot_foo__pb2.FooStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
